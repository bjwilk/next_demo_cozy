generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String      @id @default(uuid())
  name                   String
  priceInCents           Int
  imagePath              String
  description            String
  isAvailableForPurchase Boolean     @default(true)
  createdAt              DateTime    @default(now())
  updatedAt              DateTime    @updatedAt
  orderItems             OrderItem[] // Update to use OrderItem for the many-to-many relation
  cartItems              CartItem[]  // Relation to CartItem
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String   // Store hashed passwords here
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  cart      Cart?    // Relation to Cart
  adminId   String?
  admin     Admin?   @relation(fields: [adminId], references: [id])
}

model Order {
  id               String      @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems       OrderItem[] // Relation to OrderItem for products in the order
}


model Cart {
  id        String     @id @default(uuid())
  userId    String     @unique // One cart per user
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  cartItems CartItem[] // Relation to CartItem
  totalInCents Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  quantity  Int      @default(1)
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int      @default(1)
}

model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String   // Store hashed passwords here
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

